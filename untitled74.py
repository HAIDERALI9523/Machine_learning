# -*- coding: utf-8 -*-
"""Untitled74.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/11jT8bh5j8-yIwaP2GbiYBX4S6kDYD8YN
"""

import pandas as pd

df = pd.read_csv("/content/userbehaviour.csv")


null_values = df.isnull().sum()

print("Column Info:")
print(df.info())

print("Null Value :")
print(null_values)

print("\nDescriptive Statistics:")
print(df.describe())

highest_screen_time = df["Average Screen Time"].max()
lowest_screen_time = df["Average Screen Time"].min()
average_screen_time = df["Average Screen Time"].mean()

# Print the results
print(f"Highest Screen Time: {highest_screen_time} minutes")
print(f"Lowest Screen Time: {lowest_screen_time} minutes")
print(f"Average Screen Time: {average_screen_time} minutes")

highest_spent = df["Average Spent on App (INR)"].max()
lowest_spent = df["Average Spent on App (INR)"].min()
average_spent = df["Average Spent on App (INR)"].mean()

# Print the results
print(f"Highest Amount Spent: INR {highest_spent}")
print(f"Lowest Amount Spent: INR {lowest_spent}")
print(f"Average Amount Spent: INR {average_spent}")

import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns


#  (installed) and users who have uninstalled the app
active_users = df[df["Status"] == "Installed"]
uninstalled_users = df[df["Status"] == "Uninstalled"]

plt.figure(figsize=(10, 6))
sns.scatterplot(data=active_users, x="Average Screen Time", y="Average Spent on App (INR)", label="Active Users")
sns.scatterplot(data=uninstalled_users, x="Average Screen Time", y="Average Spent on App (INR)", label="Uninstalled Users")
plt.title("Relationship between Spending Capacity and Screen Time")
plt.xlabel("Average Screen Time (minutes)")
plt.ylabel("Average Spent on App (INR)")
plt.legend()
plt.grid(True)
plt.show()

active_users = df[df["Status"] == "Installed"]
uninstalled_users = df[df["Status"] == "Uninstalled"]

plt.figure(figsize=(10, 6))
sns.scatterplot(data=active_users, x="Ratings", y="Average Screen Time", label="Active Users")
sns.scatterplot(data=uninstalled_users, x="Ratings", y="Average Screen Time", label="Uninstalled Users", marker="x")
plt.title("Relationship between Ratings and Screen Time")
plt.xlabel("Ratings")
plt.ylabel("Average Screen Time (minutes)")
plt.legend()
plt.grid(True)
plt.show()

from sklearn.cluster import KMeans

df = df.drop(["userid", "Status"], axis=1)



X = df[["Average Screen Time", "Average Spent on App (INR)", "Ratings"]]

inertia_values = []
for k in range(1, 11):
    kmeans = KMeans(n_clusters=k, random_state=42)
    kmeans.fit(X)
    inertia_values.append(kmeans.inertia_)

import matplotlib.pyplot as plt
plt.plot(range(1, 11), inertia_values, marker='o')
plt.xlabel('Number of clusters')
plt.ylabel('Inertia')
plt.title('Elbow Method for Optimal K')
plt.show()


optimal_k = 3

kmeans = KMeans(n_clusters=optimal_k, random_state=42)
kmeans.fit(X)
df['Cluster'] = kmeans.labels_

segment_counts = df['Cluster'].value_counts()
print(f"Number of Segments: {len(segment_counts)}")
print(segment_counts)

plt.figure(figsize=(10, 6))
sns.scatterplot(data=df, x="Average Screen Time", y="Average Spent on App (INR)", hue="Cluster", palette="Set1", s=100)
plt.title("User Segments based on Behavior")
plt.xlabel("Average Screen Time (minutes)")
plt.ylabel("Average Spent on App (INR)")
plt.legend(title="Cluster")
plt.grid(True)
plt.show()